services:
  postgres:
    image: postgres:latest
    container_name: postgres_dw
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pb_dw
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - etl_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_DATABASE: ecommerce
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb-init/init.js:/docker-entrypoint-initdb.d/init.js:ro
      - mongo_data:/data/db
    networks:
      - etl_network
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/ecommerce --quiet"]
      interval: 10s
      timeout: 10s
      retries: 5

  python_app:
    build:
      context: ./python_etl
      dockerfile: ./docker/Dockerfile
    container_name: python_etl
    volumes:
      - ./input:/app/input
      - ./python_etl:/app
    env_file:
      - ./.env
    networks:
      - etl_network
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy

networks:
  etl_network:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:

